@model course.Models.User
@using System.Security.Claims @* ДОБАВЛЕНО: Для ClaimTypes и FindFirstValue *@
@using System.Collections.Generic @* Для List<Post> *@
@using System.Linq @* Для метода .Any() *@

@{
    ViewData["Title"] = "Личный кабинет: " + Model.Login;
    var isCurrentUser = User.FindFirstValue(ClaimTypes.NameIdentifier) == Model.IdUser.ToString();
}

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-md-8 col-lg-7">
            <div class="card shadow-lg p-4 mb-4">
                <div class="card-body">
                    <h1 class="card-title text-center mb-4">Личный кабинет</h1>
                    <hr />

                    @if (TempData["SuccessMessage"] != null)
                    {
                        <div class="alert alert-success alert-dismissible fade show" role="alert">
                            @TempData["SuccessMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    }
                    @if (TempData["ErrorMessage"] != null)
                    {
                        <div class="alert alert-danger alert-dismissible fade show" role="alert">
                            @TempData["ErrorMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    }

                    <dl class="row">
                        <dt class="col-sm-4">@Html.DisplayNameFor(model => model.Login)</dt>
                        <dd class="col-sm-8">@Html.DisplayFor(model => model.Login)</dd>

                        <dt class="col-sm-4">@Html.DisplayNameFor(model => model.Email)</dt>
                        <dd class="col-sm-8">@Html.DisplayFor(model => model.Email)</dd>

                        <dt class="col-sm-4">@Html.DisplayNameFor(model => model.RegistrationDate)</dt>
                        <dd class="col-sm-8">@Html.DisplayFor(model => model.RegistrationDate)</dd>

                        <dt class="col-sm-4">@Html.DisplayNameFor(model => model.Rating)</dt>
                        <dd class="col-sm-8">@Html.DisplayFor(model => model.Rating)</dd>

                        <dt class="col-sm-4">@Html.DisplayNameFor(model => model.BlockStatus)</dt>
                        <dd class="col-sm-8">
                            <span class="badge @(Model.BlockStatus ? "bg-danger" : "bg-success")">
                                @(Model.BlockStatus ? "Заблокирован" : "Активен")
                            </span>
                        </dd>

                        @if (User.IsInRole("Administrator") && isCurrentUser)
                        {
                            <dt class="col-sm-4">Уровень доступа администратора</dt>
                            <dd class="col-sm-8">
                                @User.FindFirstValue("AccessLevel")
                            </dd>
                        }
                    </dl>

                    @if (isCurrentUser)
                    {
                        <div class="d-flex justify-content-center mt-4">
                            <a asp-action="Edit" class="btn btn-warning me-3">Редактировать профиль</a>
                            <a asp-action="ChangePassword" class="btn btn-info">Изменить пароль</a>
                        </div>
                    }
                    else
                    {
                        <div class="text-center mt-4">
                            <a asp-action="Index" asp-controller="Home" class="btn btn-secondary">Вернуться на главную</a>
                        </div>
                    }
                </div>
            </div>

            @* Отображение последних постов пользователя *@
            <div class="card shadow-lg p-4 mt-5">
                <div class="card-body">
                    <h2 class="card-title text-center mb-4">Последние посты пользователя</h2>
                    <hr />
                    @{
                        // Явное приведение ViewBag.UserPosts к List<Post> для использования LINQ методов
                        var userPosts = ViewBag.UserPosts as List<Post>;
                    }
                    @if (userPosts == null || !userPosts.Any())
                    {
                        <div class="alert alert-info text-center" role="alert">
                            Пока нет опубликованных постов.
                        </div>
                    }
                    else
                    {
                        <div class="list-group">
                            @foreach (var post in userPosts) @* Использование явно типизированной переменной *@
                            {
                                <a asp-controller="Posts" asp-action="Details" asp-route-id="@post.IdPost" class="list-group-item list-group-item-action d-flex justify-content-between align-items-center">
                                    <div>
                                        <h5 class="mb-1">@post.Title</h5>
                                        <small class="text-muted">Опубликовано: @post.CreationDate.ToString("dd.MM.yyyy")</small>
                                    </div>
                                    <span class="badge bg-primary rounded-pill">Рейтинг: @post.Rating</span>
                                </a>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
