@model IEnumerable<course.Models.EventParticipant>
@using course.Models

@{
    ViewData["Title"] = "Все участники событий"; // Title now reflects events
    var eventNames = ViewData["EventNames"] as Dictionary<int, string>; // Expects EventNames
    var userNames = ViewData["UserNames"] as Dictionary<int, string>; // Expects UserNames
}

<h1>Все участники событий</h1> @* H1 now reflects events *@

<p>
    <a asp-action="Create" class="btn btn-primary">Добавить участника</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>
                Событие @* Column header refers to "Event" *@
            </th>
            <th>
                Участник
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ParticipationStatus) @* **Corrected: Using ParticipationStatus** *@
            </th>
            <th>Действия</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @if (eventNames != null && eventNames.ContainsKey(item.IdEvent)) @* **Corrected: Using IdEvent** *@
                    {
                        <a asp-controller="Events" asp-action="Details" asp-route-id="@item.IdEvent">@eventNames[item.IdEvent]</a> @* **Corrected: Using IdEvent, Events controller** *@
                    }
                    else
                    {
                        <span>Неизвестное событие (ID: @item.IdEvent)</span> @* **Corrected: Using IdEvent** *@
                    }
                </td>
                <td>
                    @if (userNames != null && userNames.ContainsKey(item.IdUser)) @* **Corrected: Using IdUser** *@
                    {
                        <a asp-controller="Users" asp-action="Details" asp-route-id="@item.IdUser">@userNames[item.IdUser]</a> @* **Corrected: Using IdUser** *@
                    }
                    else
                    {
                        <span>Неизвестный пользователь (ID: @item.IdUser)</span> @* **Corrected: Using IdUser** *@
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ParticipationStatus) @* **Corrected: Using ParticipationStatus** *@
                </td>
                <td>
                    @* For Edit and Delete, using IdEvent and IdUser for the composite key *@
                    <a asp-action="Edit" asp-route-idEvent="@item.IdEvent" asp-route-idUser="@item.IdUser" class="btn btn-sm btn-warning">Редактировать</a> | @* **Corrected: Using idEvent, idUser** *@
                    <a asp-action="Details" asp-route-idEvent="@item.IdEvent" asp-route-idUser="@item.IdUser" class="btn btn-sm btn-info">Детали</a> | @* **Corrected: Using idEvent, idUser** *@
                    <form asp-action="Delete" asp-controller="EventParticipants" method="post" style="display:inline;"> @* **Corrected: Using EventParticipants controller** *@
                        <input type="hidden" name="idEvent" value="@item.IdEvent" /> @* **Corrected: Using idEvent** *@
                        <input type="hidden" name="idUser" value="@item.IdUser" /> @* **Corrected: Using idUser** *@
                        <button type="submit" class="btn btn-sm btn-danger ms-2">Удалить</button>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>